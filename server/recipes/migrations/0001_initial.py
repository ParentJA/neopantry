# Generated by Django 4.2.1 on 2023-05-30 03:40

from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import recipes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('allergens', models.ManyToManyField(blank=True, to='recipes.allergen')),
            ],
            options={
                'ordering': ('name',),
                'default_related_name': 'foods',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('rank', models.IntegerField(default=0)),
                ('is_optional', models.BooleanField(default=False)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.food')),
            ],
            options={
                'default_related_name': 'ingredients',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_type', models.CharField(choices=[('QUANTITY', 'QUANTITY'), ('WEIGHT', 'WEIGHT'), ('VOLUME', 'VOLUME')], max_length=255)),
                ('measurement_unit', models.CharField(choices=[('TEASPOON', 'TEASPOON'), ('TABLESPOON', 'TABLESPOON'), ('CUP', 'CUP'), ('PINT', 'PINT'), ('QUART', 'QUART'), ('GALLON', 'GALLON'), ('OUNCE', 'OUNCE'), ('POUND', 'POUND')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, default='photos/no-image.jpg', null=True, upload_to='photos')),
                ('total_make_again', models.IntegerField(default=0, editable=False)),
                ('total_ratings', models.IntegerField(default=0, editable=False)),
                ('num_reviews', models.IntegerField(default=0, editable=False)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('foods', models.ManyToManyField(through='recipes.Ingredient', to='recipes.food')),
            ],
            options={
                'ordering': ('name',),
                'default_related_name': 'recipes',
            },
            managers=[
                ('objects', recipes.models.RecipeManager()),
            ],
        ),
        migrations.CreateModel(
            name='RecipeSearchWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.TextField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_ts', models.DateTimeField(auto_now_add=True)),
                ('updated_ts', models.DateTimeField(auto_now=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_ts',),
                'default_related_name': 'notes',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=6)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.food')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.measurement')),
            ],
            options={
                'default_related_name': 'products',
            },
        ),
        migrations.CreateModel(
            name='MeasurementConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=3, max_digits=6)),
                ('volume', models.DecimalField(decimal_places=3, max_digits=6)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.food')),
                ('volume_measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volume_measurement_conversions', to='recipes.measurement')),
                ('weight_measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_measurement_conversions', to='recipes.measurement')),
            ],
            options={
                'default_related_name': 'measurement_conversions',
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='measurement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.measurement'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe'),
        ),
        migrations.CreateModel(
            name='UserRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'user_recipes',
                'unique_together': {('user', 'recipe')},
            },
        ),
        migrations.CreateModel(
            name='RecipeReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make_again', models.BooleanField()),
                ('rating', models.IntegerField()),
                ('review', models.TextField(blank=True, null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'reviews',
                'unique_together': {('recipe', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='recipe_search_vector_index'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together={('recipe', 'food', 'rank')},
        ),
    ]
